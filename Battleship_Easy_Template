# import randint

# create a function print_board to print the board

# create a function random_row to generate a random number that corresponds to the index of a row on the board
# randint generates a random integer in the range provided

# function to print board row by row

# function to generate random number for board row index

# function to generate random number for board column index
    
    
# main
# initialize empty board

# insert 3 rows of ["O","O","O"] into the board

# show intro message

# show board

# place the ship at row

# place the ship at column

# create integer variable turn and initialize to 1

# loop if within 3 tries
    # show try number
    # convert input row to integer board index
    # convert input column to integer board index
    # check hit
    # if user hit the ship
        # show congratulatory message
        # exit loop
    # else
        # if out of range
            # show error message
        # if spot has already been hit
            # show already guessed message
        # if player hits empty spot
            # show empty hit message
            # mark spot as guessed with 'X' 
            # increment turn
            # show updated board
        # if after 3 tries
            # show game over message
            # reveal hidden ship location
# create a function random_col to generate a random number that corresponds to the index of a column on the board


# main
# initialize an empty board so that spaces can be appended to it later

# insert three rows of ["O","O","O"] into the board 

# print an intro message

# call print_board()

# create a variable called ship_row and assign it result of random_row()
# create a variable called ship_col and assign it result of random_col()
# create an integer called turn and set it to 1

# while turn is less than 4
    # print the turn number
    # get the row from the user and convert to integer
    # get the col from the user and convert to integer
    # check for the hit
        # if the player has hit the ship, congratulate him/her
        # if the input is invalid (out of range or has already been guessed), prompt to try again
        # if the player has missed, increment turn and reflect the hit on the board (board[row][col] = "X") and print the board
        # after 3 turns, print game over and reveal the location of the battleship
    
